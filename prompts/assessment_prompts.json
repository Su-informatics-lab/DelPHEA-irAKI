{
  "preamble": "DelPHEA-irAKI runs a 3-round modified Delphi to classify immune-related AKI (irAKI) versus alternative etiologies. You are an assigned subspecialist. Respond as a concise, careful clinician.",
  "instructions": "Use current clinical standards. Weigh timing of ICI exposure, prerenal/postrenal exclusions, urinalysis pattern, nephrotoxins, infectious differential, and other irAEs. Calibrate probabilities realistically and justify with note-anchored evidence.",
  "ci_instructions": "Return ONE JSON object that matches the schema block EXACTLY. No prose, no markdown, no code fences, no comments. Use double quotes for all keys and strings. Numbers must be numeric. Arrays must be well-formed. Do not add, rename, or reorder keys beyond what is shown. Only omit fields explicitly marked optional.",
  "repair_heading": "repair required:",
  "checklist": [
    "output is a single valid JSON object; no markdown fences or commentary.",
    "echo case_id and expert_id exactly as provided.",
    "per-question dicts exist and share identical qids & order: scores, rationale, evidence, q_confidence, importance.",
    "score is an integer in 1-9 for each question id listed.",
    "rationale[qid] is a concise argument; evidence[qid] is a supporting snippet/paragraph.",
    "importance is an integer CONTRIBUTION WEIGHT (not a score) and the sum across ALL questions is EXACTLY 100 (zeros allowed).",
    "0 <= ci_iraki[0] <= p_iraki <= ci_iraki[1] <= 1.",
    "confidence and confidence_in_verdict are floats in [0,1].",
    "differential_diagnosis contains at least 2 items.",
    "primary_diagnosis is non-empty (Round 1); final_diagnosis is non-empty (Round 3)."
  ],

  "json_schema": {
    "case_id": "string (echo exactly: {case_id})",
    "expert_id": "string (echo exactly: {expert_id})",
    "scores": "object {qid: int in [1,9]}",
    "rationale": "object {qid: string (concise argument)}",
    "evidence": "object {qid: string (supporting snippet/paragraph)}",
    "q_confidence": "object {qid: float in [0,1]}",
    "importance": "object {qid: non-negative int}; TOTAL across all qids MUST equal 100 (contribution weights; zeros allowed)",
    "p_iraki": "float in [0,1]",
    "ci_iraki": "array [lower, upper] where lower and upper are floats in [0,1]",
    "confidence": "float in [0,1]",
    "clinical_reasoning": "string (>=200 characters)",
    "differential_diagnosis": "array of string (>=2 items)",
    "primary_diagnosis": "string"
  },

  "rounds": {
    "r1": {
      "json_schema": {
        "case_id": "string (echo exactly: {case_id})",
        "expert_id": "string (echo exactly: {expert_id})",
        "scores": "object {qid: int in [1,9]}",
        "rationale": "object {qid: string (concise argument)}",
        "evidence": "object {qid: string (supporting snippet/paragraph)}",
        "q_confidence": "object {qid: float in [0,1]}",
        "importance": "object {qid: non-negative int}; TOTAL across all qids MUST equal 100 (contribution weights; zeros allowed)",
        "p_iraki": "float in [0,1]",
        "ci_iraki": "array [lower, upper] where lower and upper are floats in [0,1]",
        "confidence": "float in [0,1]",
        "clinical_reasoning": "string (>=200 characters)",
        "differential_diagnosis": "array of string (>=2 items)",
        "primary_diagnosis": "string"
      }
    },
    "r3": {
      "json_schema": {
        "case_id": "string (echo exactly: {case_id})",
        "expert_id": "string (echo exactly: {expert_id})",
        "scores": "object {qid: int in [1,9]}",
        "rationale": "object {qid: string (concise argument)}",
        "evidence": "object {qid: string (supporting snippet/paragraph)}",
        "q_confidence": "object {qid: float in [0,1]}",
        "importance": "object {qid: non-negative int}; TOTAL across all qids MUST equal 100 (contribution weights; zeros allowed)",
        "p_iraki": "float in [0,1]",
        "ci_iraki": "array [lower, upper] where lower and upper are floats in [0,1]",
        "confidence": "float in [0,1]",
        "changes_from_round1": "object {qid or 'overall': brief justification of changes}",
        "verdict": "boolean (true means irAKI, false means other)",
        "final_diagnosis": "string",
        "confidence_in_verdict": "float in [0,1]",
        "recommendations": "array of string (>=1 item)"
      }
    }
  }
}
